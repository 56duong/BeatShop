package beatalbumshop;

import beatalbumshop.componment.MyDialog;
import beatalbumshop.dao.AlbumDAO;
import beatalbumshop.dao.AlbumDAOImpl;
import beatalbumshop.model.Album;
import beatalbumshop.utils.ClearComponent;
import beatalbumshop.utils.ImageResizing;
import beatalbumshop.utils.Validator;
import java.awt.Rectangle;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Collections;
import javax.imageio.ImageIO;
import javax.swing.JFileChooser;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableModel;

public class ManagementAlbum extends javax.swing.JPanel {

    ArrayList<Album> lAlbum = new ArrayList<>(); //List Album
    DefaultTableModel model;
    AlbumDAO albumDAO = new AlbumDAOImpl();
    int index = -1;
    BufferedImage albumImage;
    
    public ManagementAlbum() {
        initComponents();
        
        //table
        //tao model
        model = new DefaultTableModel();

        // Set the table model to the tblAlbum table
        tblAlbum.setModel(model);
        
        //disable table editing
        tblAlbum.setDefaultEditor(Object.class, null); 
        
        //table header
        String [] colNames = {"ID", "Album Name", "Price", "In Stock"};
        model.setColumnIdentifiers(colNames);

        //column width
        tblAlbum.getColumnModel().getColumn(0).setPreferredWidth(30);
        tblAlbum.getColumnModel().getColumn(1).setPreferredWidth(300);
        tblAlbum.getColumnModel().getColumn(2).setPreferredWidth(80);
        tblAlbum.getColumnModel().getColumn(3).setPreferredWidth(80);
        
        //table data
        fillToTable();
        
        tblAlbum.requestFocus();
    }
    
    
    
    //XAY DUNG CAC HAM

    public void selectRow(int i) {
        if(i >= 0 && tblAlbum.getRowCount() > 0) {
            index = i;
            tblAlbum.setRowSelectionInterval(index, index);
            showDetail();
            //scroll toi dong duoc chon
            tblAlbum.scrollRectToVisible(new Rectangle(tblAlbum.getCellRect(index, 0, true)));
            albumImage = null;
        }
    } 
    
    
    
    public void fillToTable() {
        lAlbum = (ArrayList<Album>) albumDAO.getAll();
        
        model.setRowCount(0); //clear rows in the table
        
        //them tung dong vao
        if(lAlbum != null) {
            for(Album album : lAlbum) {
                model.addRow(new Object[] {album.getAlbumID(), album.getAlbumName(), album.getAlbumPrice(), album.getInStock()});
            }
        }
    }
    
    
    
    public Integer findAlbumIndex(int albumID) {
        for(Album album : lAlbum) {
            if((album.getAlbumID() + "").equalsIgnoreCase(albumID + "")) {
                return lAlbum.indexOf(album);
            }
        }
        return -1;
    }
    
    
    
    public void showDetail() {
        Album album = new Album();
        
        //lay ID trong cot dau tien cua hang duoc chon
        String id = tblAlbum.getValueAt(tblAlbum.getSelectedRow(), 0).toString();
        
        //tim album co ID trong lAlbum
        album = lAlbum.get(findAlbumIndex(Integer.parseInt(id)));
        
        //do du lieu tu Album album len form
        lblID.setText(album.getAlbumID() + "");
        txtName.setText(album.getAlbumName());
        txtPrice.setText(album.getAlbumPrice() + "");
        txtInStock.setText(album.getInStock() + "");
        
        lblImage.setIcon(ImageResizing.ImageResizing("src/beatalbumshop/resources/images/albums/" + album.getAlbumID() + ".png", lblImage.getWidth() - 1, lblImage.getHeight()));
    }
    
    
    
    public void clearForm() {
        index = -1;
        tblAlbum.getSelectionModel().clearSelection(); //bo chon tren table
        ClearComponent.clear(lblImage, lblID, txtName, txtPrice, txtInStock);
        albumImage = null;
    }
    
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblAlbum = new beatalbumshop.componment.MyTable();
        lblID2 = new beatalbumshop.componment.MyLabel();
        lblName = new beatalbumshop.componment.MyLabel();
        txtName = new beatalbumshop.componment.MyTextField();
        lblPrice = new beatalbumshop.componment.MyLabel();
        txtPrice = new beatalbumshop.componment.MyTextField();
        lblInStock = new beatalbumshop.componment.MyLabel();
        txtInStock = new beatalbumshop.componment.MyTextField();
        btnNew = new beatalbumshop.componment.MyButton();
        btnUpdate = new beatalbumshop.componment.MyButton();
        btnDelete = new beatalbumshop.componment.MyButton();
        lblImage = new javax.swing.JLabel();
        lblID = new beatalbumshop.componment.MyLabel();
        btnAdd = new beatalbumshop.componment.MyButton();

        setBackground(new java.awt.Color(255, 255, 255));
        setMaximumSize(new java.awt.Dimension(1030, 658));
        setMinimumSize(new java.awt.Dimension(1030, 658));

        tblAlbum.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                tblAlbumMousePressed(evt);
            }
        });
        jScrollPane1.setViewportView(tblAlbum);

        lblID2.setForeground(new java.awt.Color(80, 80, 80));
        lblID2.setText("ID");

        lblName.setForeground(new java.awt.Color(80, 80, 80));
        lblName.setText("Name");

        txtName.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), javax.swing.BorderFactory.createEmptyBorder(3, 3, 3, 3)));
        txtName.setFont(new java.awt.Font("Open Sans", 0, 14)); // NOI18N
        txtName.setNextFocusableComponent(txtPrice);

        lblPrice.setForeground(new java.awt.Color(80, 80, 80));
        lblPrice.setText("Price");

        txtPrice.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), javax.swing.BorderFactory.createEmptyBorder(3, 3, 3, 3)));
        txtPrice.setFont(new java.awt.Font("Open Sans", 0, 14)); // NOI18N
        txtPrice.setNextFocusableComponent(txtInStock);

        lblInStock.setForeground(new java.awt.Color(80, 80, 80));
        lblInStock.setText("In Stock");

        txtInStock.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), javax.swing.BorderFactory.createEmptyBorder(3, 3, 3, 3)));
        txtInStock.setFont(new java.awt.Font("Open Sans", 0, 14)); // NOI18N

        btnNew.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        btnNew.setText("New");
        btnNew.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnNew.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNewActionPerformed(evt);
            }
        });

        btnUpdate.setBackground(new java.awt.Color(0, 162, 47));
        btnUpdate.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 162, 47)));
        btnUpdate.setForeground(new java.awt.Color(255, 255, 255));
        btnUpdate.setText("Update");
        btnUpdate.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        btnDelete.setBackground(new java.awt.Color(215, 46, 46));
        btnDelete.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(215, 46, 46)));
        btnDelete.setForeground(new java.awt.Color(255, 255, 255));
        btnDelete.setText("Delete");
        btnDelete.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        lblImage.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        lblImage.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        lblImage.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                lblImageMousePressed(evt);
            }
        });

        btnAdd.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        btnAdd.setText("Add");
        btnAdd.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 970, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblImage, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(30, 30, 30)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblID2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblPrice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblInStock, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(8, 8, 8)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, 202, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtPrice, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtInStock, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblID, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(50, 50, 50)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnNew, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(30, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(36, 36, 36)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblID2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnNew, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblID, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(21, 21, 21)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                                    .addComponent(lblName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(btnAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(20, 20, 20)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                                    .addComponent(lblPrice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtPrice, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(21, 21, 21)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(lblInStock, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtInStock, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(20, 20, 20)
                                .addComponent(btnDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addComponent(lblImage, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 49, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 367, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void tblAlbumMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblAlbumMousePressed
        selectRow(tblAlbum.getSelectedRow());
    }//GEN-LAST:event_tblAlbumMousePressed

    private void btnNewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNewActionPerformed
        clearForm();
        txtName.requestFocus();
    }//GEN-LAST:event_btnNewActionPerformed

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        String name = txtName.getText();
        String price = txtPrice.getText();
        String inStock = txtInStock.getText();
        
        //validate
        ArrayList<String> errors = new ArrayList<>();

        errors.add(Validator.allowNumber((JTextField)txtInStock, "In Stock", inStock, false));
        errors.add(Validator.allowDouble((JTextField)txtPrice, "Price", price, false));
        errors.add((!Validator.isNotNull((JTextField)txtName, name)) ? "Vui lòng nhập Name\n" : "");

        Collections.reverse(errors);
        String e = "";
        for(String s : errors) e += s;
        
        //co loi
        if(!e.isEmpty()) {
            MyDialog.display(1, e);
            return;
        }
          
        //add
        //get max id
        int rowCount = tblAlbum.getRowCount();
        int max =0;
        for (int i = 0; i < rowCount; i++) {
            Object value = tblAlbum.getValueAt(i, 0);
            if(Integer.parseInt(value.toString()) > max) {
                max = Integer.parseInt(value.toString());
            }
        }
        int id = max + 1;

        // save image to file
        if(albumImage != null) {
            try {
                File destFile = new File("src/beatalbumshop/resources/images/albums/" + id + ".png");
                ImageIO.write(albumImage, "png", destFile);
            } catch (IOException ex) {
                //them that bai
                MyDialog.display(1, "Có lỗi xảy ra.");
                return;
            }
        }
        
        boolean result = albumDAO.add(new Album(id, name, Double.parseDouble(price), Integer.parseInt(inStock)));
        
        if(result) {
            //them thanh cong
            fillToTable();
            selectRow(findAlbumIndex(id));
        }
        else {
            //them that bai
            MyDialog.display(1, "Có lỗi xảy ra.");
        }
    }//GEN-LAST:event_btnAddActionPerformed

    private void lblImageMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblImageMousePressed
        JFileChooser fileChooser = new JFileChooser();
        int result = fileChooser.showDialog(null, "Open");
        if (result == JFileChooser.APPROVE_OPTION) {
            File selectedFile = fileChooser.getSelectedFile();
            try {
                albumImage = ImageIO.read(selectedFile);
                lblImage.setIcon(ImageResizing.ImageResizing(albumImage, lblImage.getWidth() - 1, lblImage.getHeight()));
            } catch (Exception ex) {
                ex.printStackTrace();
            }
        }
    }//GEN-LAST:event_lblImageMousePressed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        String name = txtName.getText();
        String price = txtPrice.getText();
        String inStock = txtInStock.getText();
        
        //validate
        ArrayList<String> errors = new ArrayList<>();

        errors.add(Validator.allowNumber((JTextField)txtInStock, "In Stock", inStock, false));
        errors.add(Validator.allowDouble((JTextField)txtPrice, "Price", price, false));
        errors.add((!Validator.isNotNull((JTextField)txtName, name)) ? "Vui lòng nhập Name\n" : "");

        Collections.reverse(errors);
        String e = "";
        for(String s : errors) e += s;
        
        //co loi
        if(!e.isEmpty()) {
            MyDialog.display(1, e);
            return;
        }
          
        //add
        //get max id
        int id = Integer.parseInt(tblAlbum.getValueAt(tblAlbum.getSelectedRow(), 0).toString());

        // save image to file
        if(albumImage != null) {
            try {
                File destFile = new File("src/beatalbumshop/resources/images/albums/" + id + ".png");
                ImageIO.write(albumImage, "png", destFile);
            } catch (IOException ex) {
                //them that bai
                MyDialog.display(1, "Có lỗi xảy ra.");
                return;
            }
        }
        
        boolean result = albumDAO.updateByID(new Album(id, name, Double.parseDouble(price), Integer.parseInt(inStock)));
        
        if(result) {
            //them thanh cong
            fillToTable();
            selectRow(findAlbumIndex(id));
        }
        else {
            //them that bai
            MyDialog.display(1, "Có lỗi xảy ra.");
        }
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        //delete
        String id = tblAlbum.getValueAt(tblAlbum.getSelectedRow(), 0).toString();
        //delete image
        File imageFile = new File("src/beatalbumshop/resources/images/albums/" + id + ".png");
        if (imageFile.exists()) {
            if (!imageFile.delete()) {
                //delete that bai
                MyDialog.display(1, "Có lỗi xảy ra.");
                return;
            }
        }
        
        boolean result = albumDAO.deleteByID(id);
        
        if(result) {
            //delete thanh cong
            fillToTable();
            
            //xoa 1 dong cuoi
            if(lAlbum.size() == 0) clearForm();
            //xoa dong cuoi
            else if(index == lAlbum.size()) selectRow(index - 1);
            else selectRow(index);
        }
        else {
            //delete that bai
            MyDialog.display(1, "Có lỗi xảy ra.");
        }
    }//GEN-LAST:event_btnDeleteActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private beatalbumshop.componment.MyButton btnAdd;
    private beatalbumshop.componment.MyButton btnDelete;
    private beatalbumshop.componment.MyButton btnNew;
    private beatalbumshop.componment.MyButton btnUpdate;
    private javax.swing.JScrollPane jScrollPane1;
    private beatalbumshop.componment.MyLabel lblID;
    private beatalbumshop.componment.MyLabel lblID2;
    private javax.swing.JLabel lblImage;
    private beatalbumshop.componment.MyLabel lblInStock;
    private beatalbumshop.componment.MyLabel lblName;
    private beatalbumshop.componment.MyLabel lblPrice;
    private beatalbumshop.componment.MyTable tblAlbum;
    private beatalbumshop.componment.MyTextField txtInStock;
    private beatalbumshop.componment.MyTextField txtName;
    private beatalbumshop.componment.MyTextField txtPrice;
    // End of variables declaration//GEN-END:variables
}
