package beatalbumshop;


import beatalbumshop.componment.MyDialog;
import beatalbumshop.dao.CustomerDAO;
import beatalbumshop.dao.CustomerDAOImpl;
import beatalbumshop.dao.Firebase;
import beatalbumshop.dao.UserDAO;
import beatalbumshop.dao.UserDAOImpl;
import beatalbumshop.utils.SendEmail;
import beatalbumshop.utils.TextHelper;
import com.google.api.core.ApiFuture;
import com.google.cloud.firestore.CollectionReference;
import com.google.cloud.firestore.DocumentSnapshot;
import com.google.cloud.firestore.Firestore;
import com.google.cloud.firestore.Query;
import com.google.cloud.firestore.QuerySnapshot;
import com.google.cloud.firestore.WriteResult;
import java.awt.Color;
import java.awt.GridBagConstraints;
import java.awt.GridBagLayout;
import java.awt.Window;
import java.awt.event.FocusEvent;
import java.awt.event.FocusListener;
import java.awt.geom.RoundRectangle2D;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.swing.BorderFactory;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.JTextField;

public class Forgot extends javax.swing.JFrame {

    UserDAO userDAO = new UserDAOImpl();
    CustomerDAO customerDAO = new CustomerDAOImpl();
    int otp = -1;
    String emailGLOBAL = null;

    public Forgot() {
        initComponents();
        setLocationRelativeTo(null);
        lblNote.setHorizontalAlignment(JLabel.CENTER);
        lblNote.setVerticalAlignment(JLabel.CENTER);
        //rounded frame
        setShape(new RoundRectangle2D.Double(0, 0, 1280, 720, 20, 20));
        setSize(1280, 720);
        setLocationRelativeTo(null);

        addPlaceholderText(txtEmail, "Email");
        addPlaceholderText(txtOTP, "OTP");
        addPlaceholderText(txtPassword, "New Password");
        addPlaceholderText(txtConfirmPassword, "Confirm New Password");

        txtEmail.requestFocus();
        
        txtOTP.setVisible(false);
        txtPassword.setVisible(false);
        txtConfirmPassword.setVisible(false);
    }

    private void addPlaceholderText(JTextField textField, String placeholderText) {
        // Save the default foreground color of the text field
        Color defaultColor = textField.getForeground();

        // Set the placeholder text
        textField.setText(placeholderText);

        // Add a focus listener to handle the placeholder text
        textField.addFocusListener(new FocusListener() {
            @Override
            public void focusGained(FocusEvent e) {
                if (textField.getText().equals(placeholderText)) {
                    textField.setText("");
                    textField.setForeground(defaultColor);
                }
            }

            @Override
            public void focusLost(FocusEvent e) {
                if (textField.getText().isEmpty()) {
                    textField.setForeground(Color.GRAY);
                    textField.setText(placeholderText);
                }
            }
        });
    }

    public static boolean isValidEmail(String email) {
        String emailRegex = "^[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,3}$";
        return email.matches(emailRegex);
    }


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlMain = new javax.swing.JPanel();
        windowTitleBar1 = new beatalbumshop.componment.WindowTitleBar();
        pnlContent = new javax.swing.JPanel();
        pnlForm = new javax.swing.JPanel();
        lblTitle = new javax.swing.JLabel();
        txtConfirmPassword = new javax.swing.JPasswordField();
        txtPassword = new javax.swing.JPasswordField();
        txtOTP = new javax.swing.JTextField();
        txtEmail = new javax.swing.JTextField();
        btnSubmit = new beatalbumshop.componment.MyButton();
        lblContinueAs = new javax.swing.JLabel();
        lblNote = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setMaximumSize(new java.awt.Dimension(1280, 725));
        setMinimumSize(new java.awt.Dimension(1280, 720));
        setUndecorated(true);
        setPreferredSize(new java.awt.Dimension(1280, 725));

        pnlMain.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        pnlMain.setLayout(new java.awt.BorderLayout());

        windowTitleBar1.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 0, 0)));
        pnlMain.add(windowTitleBar1, java.awt.BorderLayout.PAGE_START);

        pnlContent.setBackground(new java.awt.Color(255, 255, 255));
        pnlContent.setPreferredSize(new java.awt.Dimension(1030, 604));

        pnlForm.setBackground(new java.awt.Color(255, 255, 255));
        pnlForm.setPreferredSize(new java.awt.Dimension(412, 454));

        lblTitle.setFont(new java.awt.Font("Open Sans", 1, 36)); // NOI18N
        lblTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTitle.setText("Enter your email");

        txtConfirmPassword.setFont(new java.awt.Font("Open Sans", 0, 16)); // NOI18N
        txtConfirmPassword.setForeground(new java.awt.Color(82, 82, 82));
        txtConfirmPassword.setText("jPasswordField1");
        txtConfirmPassword.setBorder(BorderFactory.createMatteBorder(0,0,1,0, Color.GRAY));
        txtConfirmPassword.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtConfirmPasswordActionPerformed(evt);
            }
        });

        txtPassword.setFont(new java.awt.Font("Open Sans", 0, 16)); // NOI18N
        txtPassword.setForeground(new java.awt.Color(82, 82, 82));
        txtPassword.setText("jPasswordField1");
        txtPassword.setBorder(BorderFactory.createMatteBorder(0,0,1,0, Color.GRAY));
        txtPassword.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPasswordActionPerformed(evt);
            }
        });

        txtOTP.setFont(new java.awt.Font("Open Sans", 0, 16)); // NOI18N
        txtOTP.setForeground(new java.awt.Color(82, 82, 82));
        txtOTP.setBorder(BorderFactory.createMatteBorder(0, 0, 1, 0, Color.GRAY));
        txtOTP.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        txtOTP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtOTPActionPerformed(evt);
            }
        });

        txtEmail.setFont(new java.awt.Font("Open Sans", 0, 16)); // NOI18N
        txtEmail.setForeground(new java.awt.Color(82, 82, 82));
        txtEmail.setBorder(BorderFactory.createMatteBorder(0, 0, 1, 0, Color.GRAY));
        txtEmail.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        txtEmail.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtEmailActionPerformed(evt);
            }
        });

        btnSubmit.setBackground(new java.awt.Color(0, 0, 0));
        btnSubmit.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        btnSubmit.setForeground(new java.awt.Color(255, 255, 255));
        btnSubmit.setText("Get OTP");
        btnSubmit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSubmitActionPerformed(evt);
            }
        });

        lblContinueAs.setFont(new java.awt.Font("Open Sans", 1, 14)); // NOI18N
        lblContinueAs.setText("BACK TO SIGN IN");
        lblContinueAs.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 0, 0)));
        lblContinueAs.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        lblContinueAs.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblContinueAsMouseClicked(evt);
            }
        });

        lblNote.setFont(new java.awt.Font("Open Sans", 0, 13)); // NOI18N
        lblNote.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblNote.setText("The one that you use to sign in with");

        javax.swing.GroupLayout pnlFormLayout = new javax.swing.GroupLayout(pnlForm);
        pnlForm.setLayout(pnlFormLayout);
        pnlFormLayout.setHorizontalGroup(
            pnlFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlFormLayout.createSequentialGroup()
                .addGroup(pnlFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblTitle, javax.swing.GroupLayout.DEFAULT_SIZE, 475, Short.MAX_VALUE)
                    .addGroup(pnlFormLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(pnlFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnSubmit, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txtConfirmPassword)
                            .addComponent(txtPassword, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(txtEmail)
                            .addComponent(lblNote, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap())
            .addGroup(pnlFormLayout.createSequentialGroup()
                .addGap(179, 179, 179)
                .addComponent(lblContinueAs)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(pnlFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(pnlFormLayout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(txtOTP, javax.swing.GroupLayout.DEFAULT_SIZE, 469, Short.MAX_VALUE)
                    .addContainerGap()))
        );
        pnlFormLayout.setVerticalGroup(
            pnlFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlFormLayout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addComponent(lblTitle, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(26, 26, 26)
                .addComponent(lblNote, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(28, 28, 28)
                .addComponent(txtEmail, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(txtPassword)
                .addGap(10, 10, 10)
                .addComponent(txtConfirmPassword)
                .addGap(60, 60, 60)
                .addComponent(btnSubmit, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(59, 59, 59)
                .addComponent(lblContinueAs, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(pnlFormLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(pnlFormLayout.createSequentialGroup()
                    .addGap(266, 266, 266)
                    .addComponent(txtOTP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(163, Short.MAX_VALUE)))
        );

        javax.swing.GroupLayout pnlContentLayout = new javax.swing.GroupLayout(pnlContent);
        pnlContent.setLayout(pnlContentLayout);
        pnlContentLayout.setHorizontalGroup(
            pnlContentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlContentLayout.createSequentialGroup()
                .addGap(399, 399, 399)
                .addComponent(pnlForm, javax.swing.GroupLayout.PREFERRED_SIZE, 481, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(398, Short.MAX_VALUE))
        );
        pnlContentLayout.setVerticalGroup(
            pnlContentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlContentLayout.createSequentialGroup()
                .addGap(104, 104, 104)
                .addComponent(pnlForm, javax.swing.GroupLayout.PREFERRED_SIZE, 458, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(140, Short.MAX_VALUE))
        );

        pnlMain.add(pnlContent, java.awt.BorderLayout.CENTER);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlMain, javax.swing.GroupLayout.DEFAULT_SIZE, 1280, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlMain, javax.swing.GroupLayout.DEFAULT_SIZE, 765, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void lblContinueAsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblContinueAsMouseClicked
        dispose();

        boolean check = false; // true if open form buy now
        Window[] windows = Window.getWindows();
        for (Window window : windows) {
            if (window instanceof Main mainWindow && window.isVisible()) {
                check = true;
            }
        }

        if (!check) {
            new Main().setVisible(true);
        }
    }//GEN-LAST:event_lblContinueAsMouseClicked

    private void btnSubmitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSubmitActionPerformed
        String btnType = evt.getActionCommand();
        Set<String> setError = new HashSet<String>();
        if (btnType.equalsIgnoreCase("get otp")) {
            //get OTP
            String email = txtEmail.getText();
            emailGLOBAL = email;
            if (email.isBlank() || email.equalsIgnoreCase("email")) {
                txtEmail.requestFocus();
                setError.add("Vui lòng nhập Email");
            } else if (!email.matches("[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,3}$")) {
                setError.add("Email sai định dạng");
            }

            if (!setError.isEmpty()) {
                //neu co loi => hien thi loi
                String errors = "";
                for (String error : setError) {
                    errors += error;
                }
                MyDialog.display(1, errors);
            } 
            else {
                //gui email
                //neu co thi gui
                boolean check = customerDAO.checkExitByEmail(email);

                if (!check) {
                    int o = (int) (Math.random() * 900000) + 100000;
                    otp = o;
                    String subject = "RESET PASSWORD";
                    String recipientName = email;
                    String content = "<tr>\n"
                              + "<td class=\"text-center\" style=\"padding: 80px 0 !important;\">\n"
                              + "<h4>" + subject + "</h4>\n"
                              + "<br>\n"
                              + "Dear " + recipientName + ",<br>\n"
                              + "We've received your request to reset your password for your<br>BEAT account.<br>\n"
                              + "<br><br>\n"
                              + "Your OTP code is:\n"
                              + "<br><br>\n"
                              + "<h2>" + o + "</h2>\n"
                              + "</td>\n"
                              + "</tr>\n"
                              + "<tr>\n"
                              + "<td>\n"
                              + "<p class=\"text-center\">If you did not request to reset your password, please ignore this email, no changes will be made to your account. Another player may have entered your username by mistake, but we encourage you to view our tips for Protecting Your Account if you have any concerns.</p>\n"
                              + "</td>\n"
                              + "</tr>\n";
                    System.out.println("1");
                    boolean sendStatus = SendEmail.send(email, email, subject, content);
                    
                    //insert OTP into user
                    if (!sendStatus) {
                        
                        MyDialog.display(1, "Có lỗi xảy ra trong quá trình gửi email");
                        return;
                    }
                }
            
                //sau khi gui => chuyen sang xac nhan otp
                lblNote.setText("<html><p style='text-align: center'>If your username matches an existing account we will send a password reset email within a few minutes.If you have not received an email check your spam folder.</p></html>");
                txtEmail.setEnabled(false);
                txtOTP.setVisible(true);
                txtOTP.requestFocus();
                btnSubmit.setText("Verify Code");
            }
        } else if (btnType.equalsIgnoreCase("Verify Code")) {
            //submit otp
            if (txtOTP.getText().equals(otp + "") && txtOTP.getText().matches("[0-9]{6}")) {
                txtPassword.setVisible(true);
                txtPassword.requestFocus();
                txtConfirmPassword.setVisible(true);
                txtEmail.setVisible(false);
                txtOTP.setVisible(false);
                lblTitle.setText("Enter your new password");
                btnSubmit.setText("Reset Password");
            } else {

                MyDialog.display(1, "Wrong code. Try again.");
                txtOTP.requestFocus();
            }
        } 
        else if (btnType.equalsIgnoreCase("Reset Password")) {
            String password = new String(txtPassword.getPassword());
            String confirmpassword = new String(txtConfirmPassword.getPassword());

            //txtPassword
            if (password.isBlank() || password.equalsIgnoreCase("password")) {
                setError.add("Vui lòng nhập Password");
                txtPassword.requestFocus();
            } else if (!password.matches("[a-zA-Z0-9]+")) {
                setError.add("Password chỉ được chứa các kí tự [a-zA-Z0-9]");
            }
            // txt confirm password
            if (confirmpassword.isBlank() || confirmpassword.equalsIgnoreCase("Confirm Password")) {
                setError.add("Vui lòng nhập Confirm Password");
                txtConfirmPassword.requestFocus();
            }
            if (!password.equals(confirmpassword)) {
                setError.add("Vui lòng nhập Confirm Password giống với Password đã nhập");
                txtConfirmPassword.requestFocus();
            }

            if (!setError.isEmpty()) {
                //neu co loi => hien thi loi
                String errors = "";
                for (String error : setError) {
                    errors += error ;
                }
                MyDialog.display(1, errors);
//                messageDialog(errors, "error");
            } else {
                password = TextHelper.HashPassword(password);
                int rowAffected = customerDAO.updateByEmail(password, emailGLOBAL);

                if (rowAffected > 0) {
                    //update thanh cong
                    MyDialog.display(0,"Your password has been reset successfully");
                    dispose();
                    new LogIn().setVisible(true);
                } else {
                    //update that bai
                     MyDialog.display(1,"Có lỗi xảy ra");
//                    messageDialog("Có lỗi xảy ra", "error");
                }
            }
        }

    }//GEN-LAST:event_btnSubmitActionPerformed

    private void txtConfirmPasswordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtConfirmPasswordActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtConfirmPasswordActionPerformed

    private void txtPasswordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPasswordActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPasswordActionPerformed

    private void txtEmailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtEmailActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtEmailActionPerformed

    private void txtOTPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtOTPActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtOTPActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows Classic".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Forgot.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Forgot.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Forgot.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Forgot.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Forgot().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private beatalbumshop.componment.MyButton btnSubmit;
    private javax.swing.JLabel lblContinueAs;
    private javax.swing.JLabel lblNote;
    private javax.swing.JLabel lblTitle;
    private javax.swing.JPanel pnlContent;
    private javax.swing.JPanel pnlForm;
    private javax.swing.JPanel pnlMain;
    private javax.swing.JPasswordField txtConfirmPassword;
    private javax.swing.JTextField txtEmail;
    private javax.swing.JTextField txtOTP;
    private javax.swing.JPasswordField txtPassword;
    private beatalbumshop.componment.WindowTitleBar windowTitleBar1;
    // End of variables declaration//GEN-END:variables
}
