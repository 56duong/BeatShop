/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package beatalbumshop;

import beatalbumshop.componment.MyDialog;
import beatalbumshop.dao.CustomerDAO;
import beatalbumshop.dao.CustomerDAOImpl;
import beatalbumshop.dao.Firebase;
import beatalbumshop.model.Customer;
import beatalbumshop.model.LoggedInUser;
import com.google.cloud.firestore.DocumentReference;
import com.google.cloud.firestore.FieldValue;
import com.google.cloud.firestore.Firestore;
import java.awt.CardLayout;
import java.awt.Color;
import java.awt.event.FocusEvent;
import java.awt.event.FocusListener;
import java.util.HashSet;
import java.util.Set;
import javax.swing.BorderFactory;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JTextField;

/**
 *
 * @author conro
 */
public class ChangePassword extends javax.swing.JPanel {

    /**
     * Creates new form ChangePassword
     */
    public ChangePassword() {
        initComponents();
    }

//    public void messageDialog(String e, String type) {
//        String s;
//        int m;
//        switch (type.toLowerCase()) {
//            case "error":
//                s = "Error";
//                m = JOptionPane.ERROR_MESSAGE;
//                break;
//            case "warning":
//                s = "Warning";
//                m = JOptionPane.WARNING_MESSAGE;
//                break;
//            case "information":
//                s = "Information";
//                m = JOptionPane.INFORMATION_MESSAGE;
//                break;
//            default:
//                s = "Error";
//                m = JOptionPane.ERROR_MESSAGE;
//        }
//
//        JOptionPane.showMessageDialog(null, "<html>" + e + "</html>", s, m, new ImageIcon(getClass().getResource("/resources/images/icons/" + type.toLowerCase() + "-icon.png")));
//    }
//
//    private void addPlaceholderText(JTextField textField, String placeholderText) {
//        // Save the default foreground color of the text field
//        Color defaultColor = textField.getForeground();
//
//        // Set the placeholder text
//        textField.setText(placeholderText);
//
//        // Add a focus listener to handle the placeholder text
//        textField.addFocusListener(new FocusListener() {
//            @Override
//            public void focusGained(FocusEvent e) {
//                if (textField.getText().equals(placeholderText)) {
//                    textField.setText("");
//                    textField.setForeground(defaultColor);
//                }
//            }
//
//            @Override
//            public void focusLost(FocusEvent e) {
//                if (textField.getText().isEmpty()) {
//                    textField.setForeground(Color.GRAY);
//                    textField.setText(placeholderText);
//                }
//            }
//        });
//    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblTitle = new javax.swing.JLabel();
        myLabel1 = new beatalbumshop.componment.MyLabel();
        myLabel2 = new beatalbumshop.componment.MyLabel();
        myLabel3 = new beatalbumshop.componment.MyLabel();
        btnVerify = new beatalbumshop.componment.MyButton();
        lblBackToAccount = new javax.swing.JLabel();
        txtPassword1 = new javax.swing.JPasswordField();
        txtPassword2 = new javax.swing.JPasswordField();
        txtPassword = new javax.swing.JPasswordField();

        lblTitle.setFont(new java.awt.Font("Open Sans", 1, 36)); // NOI18N
        lblTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTitle.setText("Change Password");

        myLabel1.setText("Old Password");

        myLabel2.setText("New Password");

        myLabel3.setText("Confirm");

        btnVerify.setText("VERIFY");
        btnVerify.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVerifyActionPerformed(evt);
            }
        });

        lblBackToAccount.setFont(new java.awt.Font("Open Sans", 1, 14)); // NOI18N
        lblBackToAccount.setText("BACK TO ACCOUNT");
        lblBackToAccount.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 1, 0, new java.awt.Color(0, 0, 0)));
        lblBackToAccount.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        lblBackToAccount.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblBackToAccountMouseClicked(evt);
            }
        });

        txtPassword1.setFont(new java.awt.Font("Open Sans", 0, 16)); // NOI18N
        txtPassword1.setForeground(new java.awt.Color(82, 82, 82));
        txtPassword1.setText("jPasswordField1");
        txtPassword1.setBorder(BorderFactory.createMatteBorder(0,0,1,0, Color.GRAY));
        txtPassword1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPassword1ActionPerformed(evt);
            }
        });

        txtPassword2.setFont(new java.awt.Font("Open Sans", 0, 16)); // NOI18N
        txtPassword2.setForeground(new java.awt.Color(82, 82, 82));
        txtPassword2.setText("jPasswordField1");
        txtPassword2.setBorder(BorderFactory.createMatteBorder(0,0,1,0, Color.GRAY));
        txtPassword2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPassword2ActionPerformed(evt);
            }
        });

        txtPassword.setFont(new java.awt.Font("Open Sans", 0, 16)); // NOI18N
        txtPassword.setForeground(new java.awt.Color(82, 82, 82));
        txtPassword.setText("jPasswordField1");
        txtPassword.setBorder(BorderFactory.createMatteBorder(0,0,1,0, Color.GRAY));
        txtPassword.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPasswordActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(449, 449, 449)
                .addComponent(lblBackToAccount)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(351, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(myLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(myLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(myLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(61, 61, 61)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 273, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtPassword1, javax.swing.GroupLayout.PREFERRED_SIZE, 273, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtPassword2, javax.swing.GroupLayout.PREFERRED_SIZE, 273, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(234, 234, 234))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(btnVerify, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(457, 457, 457))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(lblTitle)
                        .addGap(335, 335, 335))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(115, 115, 115)
                .addComponent(lblTitle, javax.swing.GroupLayout.DEFAULT_SIZE, 67, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(myLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 11, Short.MAX_VALUE))
                    .addComponent(txtPassword))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(myLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtPassword1))
                .addGap(23, 23, 23)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(myLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtPassword2))
                .addGap(18, 18, 18)
                .addComponent(btnVerify, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(lblBackToAccount, javax.swing.GroupLayout.DEFAULT_SIZE, 31, Short.MAX_VALUE)
                .addGap(194, 194, 194))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnVerifyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVerifyActionPerformed
//        String password = new String(txtPassword.getPassword());
//        String newPassword = new String(txtPassword1.getPassword());
//        String confirmPassword = new String(txtPassword2.getPassword());
//
//        Set<String> setError = new HashSet<String>();
//
//        //txtPassword
//        if (password.isBlank()) {
//            setError.add("Vui lòng nhập Password");
//            txtPassword.requestFocus();
//        } else if (!password.matches("[a-zA-Z0-9]+")) {
//            setError.add("Password chỉ được chứa các kí tự [a-zA-Z0-9]");
//        }
//
//        //new pass
//        if (newPassword.isBlank()) {
//            setError.add("Vui lòng nhập New Password");
//            txtPassword1.requestFocus();
//        } else if (!newPassword.matches("[a-zA-Z0-9]+")) {
//            setError.add("New Password chỉ được chứa các kí tự [a-zA-Z0-9]");
//        }
//
//        // txt confirm password
//        if (confirmPassword.isBlank()) {
//            setError.add("Vui lòng nhập Confirm Password");
//            txtPassword2.requestFocus();
//        }
//        if (!confirmPassword.equals(newPassword)) {
//            setError.add("Vui lòng nhập Confirm Password giống với Password đã nhập");
//            txtPassword2.requestFocus();
//        }
//
//        if (!setError.isEmpty()) {
//            //neu co loi => hien thi loi
//            String errors = "";
//            for (String error : setError) {
//                errors += error + "<br>";
//            }
//            messageDialog(errors, "error");
//        } else {
//            //update
//            //CustomerDAO customerDAO = new CustomerDAOImpl();
//            Customer cus = (Customer) LoggedInUser.getCurrentUser();
//            String cusID = String.valueOf(cus.getID());
//            //String oldPass = new String(cus.getPassword());
//            String newPass = new String(txtPassword1.getPassword());
//
//            Firestore db = (Firestore) Firebase.getFirestore("beat-75a88");
//            DocumentReference documentRef = db.collection("customers").document(cusID);
//
//            documentRef.update("password", newPass);
//
//            MyDialog.display(0, "Update Password Successfully");
//        }
    }//GEN-LAST:event_btnVerifyActionPerformed

    private void lblBackToAccountMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblBackToAccountMouseClicked
        JPanel pnlTabContent = (JPanel) getParent();
        CardLayout c = (CardLayout) pnlTabContent.getLayout();
        c.show(pnlTabContent, "account");
    }//GEN-LAST:event_lblBackToAccountMouseClicked

    private void txtPasswordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPasswordActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPasswordActionPerformed

    private void txtPassword1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPassword1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPassword1ActionPerformed

    private void txtPassword2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPassword2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPassword2ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private beatalbumshop.componment.MyButton btnVerify;
    private javax.swing.JLabel lblBackToAccount;
    private javax.swing.JLabel lblTitle;
    private beatalbumshop.componment.MyLabel myLabel1;
    private beatalbumshop.componment.MyLabel myLabel2;
    private beatalbumshop.componment.MyLabel myLabel3;
    private javax.swing.JPasswordField txtPassword;
    private javax.swing.JPasswordField txtPassword1;
    private javax.swing.JPasswordField txtPassword2;
    // End of variables declaration//GEN-END:variables
}
